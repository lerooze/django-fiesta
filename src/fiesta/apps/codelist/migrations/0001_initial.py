# Generated by Django 2.2.6 on 2019-10-16 05:34

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('base', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Code',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=255, unique=True)),
                ('depth', models.PositiveIntegerField()),
                ('numchild', models.PositiveIntegerField(default=0)),
                ('name', models.CharField(blank=True, max_length=127, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, max_length=127, null=True, verbose_name='Name')),
                ('name_el', models.CharField(blank=True, max_length=127, null=True, verbose_name='Name')),
                ('description', models.CharField(blank=True, max_length=511, verbose_name='Description')),
                ('description_en', models.CharField(blank=True, max_length=511, null=True, verbose_name='Description')),
                ('description_el', models.CharField(blank=True, max_length=511, null=True, verbose_name='Description')),
                ('object_id', models.CharField(db_index=True, max_length=31, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$'), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Code',
                'verbose_name_plural': 'Codes',
                'ordering': ['container', 'object_id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CodelistReference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.CharField(db_index=True, max_length=31, validators=[django.core.validators.RegexValidator(re.compile('[A-Za-z][A-Za-z0-9_\\-]*'), 'Enter a value of type NCNameIDType that has pattern "([A-Za-z][A-Za-z0-9_\\-]*)"', 'invalid_pattern')], verbose_name='ID')),
                ('major_version', models.IntegerField(db_index=True, default=1, verbose_name='Major version')),
                ('minor_version', models.IntegerField(db_index=True, default=0, verbose_name='Minor version')),
                ('patch_version', models.IntegerField(db_index=True, null=True, verbose_name='Patch version')),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.Agency', verbose_name='Agency')),
            ],
            options={
                'verbose_name': 'Codelist reference',
                'verbose_name_plural': 'Codelist references',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Codelist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=127, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, max_length=127, null=True, verbose_name='Name')),
                ('name_el', models.CharField(blank=True, max_length=127, null=True, verbose_name='Name')),
                ('description', models.CharField(blank=True, max_length=511, verbose_name='Description')),
                ('description_en', models.CharField(blank=True, max_length=511, null=True, verbose_name='Description')),
                ('description_el', models.CharField(blank=True, max_length=511, null=True, verbose_name='Description')),
                ('major', models.IntegerField(db_index=True, default=1, verbose_name='Major version')),
                ('minor', models.IntegerField(db_index=True, default=0, verbose_name='Minor version')),
                ('patch', models.IntegerField(db_index=True, null=True, verbose_name='Patch version')),
                ('valid_from', models.DateTimeField(blank=True, null=True, verbose_name='Valid from')),
                ('valid_to', models.DateTimeField(blank=True, null=True, verbose_name='Valid to')),
                ('is_final', models.BooleanField(default=False, verbose_name='Is final')),
                ('object_id', models.CharField(db_index=True, max_length=31, validators=[django.core.validators.RegexValidator(re.compile('[A-Za-z][A-Za-z0-9_\\-]*'), 'Enter a value of type NCNameIDType that has pattern "([A-Za-z][A-Za-z0-9_\\-]*)"', 'invalid_pattern')], verbose_name='ID')),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.Agency', verbose_name='Agency')),
            ],
            options={
                'verbose_name': 'Codelist',
                'verbose_name_plural': 'Codelists',
                'ordering': ['agency', 'object_id', '-major', '-minor', '-patch'],
                'abstract': False,
            },
        ),
    ]
