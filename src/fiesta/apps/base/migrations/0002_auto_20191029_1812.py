# Generated by Django 3.0b1 on 2019-10-29 18:12

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('base', '0001_initial'),
        ('registry', '0001_initial'),
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.AddField(
            model_name='organisationunitscheme',
            name='submitted_structure',
            field=models.ManyToManyField(to='registry.SubmittedStructure', verbose_name='Submitted structures'),
        ),
        migrations.AddField(
            model_name='organisationunit',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.OrganisationUnitScheme', verbose_name='Organisation unit scheme'),
        ),
        migrations.AddField(
            model_name='dataproviderscheme',
            name='agency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.Agency', verbose_name='Agency'),
        ),
        migrations.AddField(
            model_name='dataproviderscheme',
            name='submitted_structure',
            field=models.ManyToManyField(to='registry.SubmittedStructure', verbose_name='Submitted structures'),
        ),
        migrations.AddField(
            model_name='dataprovider',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.DataProviderScheme', verbose_name='Data provider scheme'),
        ),
        migrations.AddField(
            model_name='dataconsumerscheme',
            name='agency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.Agency', verbose_name='Agency'),
        ),
        migrations.AddField(
            model_name='dataconsumerscheme',
            name='submitted_structure',
            field=models.ManyToManyField(to='registry.SubmittedStructure', verbose_name='Submitted structures'),
        ),
        migrations.AddField(
            model_name='dataconsumer',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.DataConsumerScheme', verbose_name='Data consumer scheme'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='agency',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Agency', verbose_name='Agency'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='data_consumer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.DataConsumer', verbose_name='Data consumer'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='data_consumer_scheme',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.DataConsumerScheme', verbose_name='Data consumer scheme'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='data_provider',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.DataProvider', verbose_name='Data provider'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='data_provider_scheme',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.DataProviderScheme', verbose_name='Data provider scheme'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='organisation_unit_scheme',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.OrganisationUnitScheme', verbose_name='Organisation unit scheme'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='organistion_unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.OrganisationUnit', verbose_name='Organisation unit'),
        ),
        migrations.AddField(
            model_name='user',
            name='agency',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='base.Agency', verbose_name='Agency'),
        ),
        migrations.AddField(
            model_name='user',
            name='data_consumer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='base.DataConsumer', verbose_name='Data consumer'),
        ),
        migrations.AddField(
            model_name='user',
            name='data_provider',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='base.DataProvider', verbose_name='Data provider'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddIndex(
            model_name='organisationunitscheme',
            index=models.Index(fields=['agency', 'object_id', 'version'], name='base_organi_agency__99ff34_idx'),
        ),
        migrations.AddConstraint(
            model_name='organisationunitscheme',
            constraint=models.UniqueConstraint(fields=('agency', 'object_id', 'version'), name='base_organisationunitscheme_unique_maintainable'),
        ),
        migrations.AddIndex(
            model_name='organisationunit',
            index=models.Index(fields=['container', 'object_id'], name='base_organi_contain_6cd310_idx'),
        ),
        migrations.AddConstraint(
            model_name='organisationunit',
            constraint=models.UniqueConstraint(fields=('container', 'object_id'), name='base_organisationunit_unique_item'),
        ),
        migrations.AddIndex(
            model_name='dataproviderscheme',
            index=models.Index(fields=['agency', 'object_id', 'version'], name='base_datapr_agency__b4c56f_idx'),
        ),
        migrations.AddConstraint(
            model_name='dataproviderscheme',
            constraint=models.UniqueConstraint(fields=('agency', 'object_id', 'version'), name='base_dataproviderscheme_unique_maintainable'),
        ),
        migrations.AddIndex(
            model_name='dataprovider',
            index=models.Index(fields=['container', 'object_id'], name='base_datapr_contain_465553_idx'),
        ),
        migrations.AddConstraint(
            model_name='dataprovider',
            constraint=models.UniqueConstraint(fields=('container', 'object_id'), name='base_dataprovider_unique_item'),
        ),
        migrations.AddIndex(
            model_name='dataconsumerscheme',
            index=models.Index(fields=['agency', 'object_id', 'version'], name='base_dataco_agency__fcfe83_idx'),
        ),
        migrations.AddConstraint(
            model_name='dataconsumerscheme',
            constraint=models.UniqueConstraint(fields=('agency', 'object_id', 'version'), name='base_dataconsumerscheme_unique_maintainable'),
        ),
        migrations.AddIndex(
            model_name='dataconsumer',
            index=models.Index(fields=['container', 'object_id'], name='base_dataco_contain_7f60fc_idx'),
        ),
        migrations.AddConstraint(
            model_name='dataconsumer',
            constraint=models.UniqueConstraint(fields=('container', 'object_id'), name='base_dataconsumer_unique_item'),
        ),
    ]
