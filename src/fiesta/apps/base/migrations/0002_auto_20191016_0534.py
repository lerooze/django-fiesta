# Generated by Django 2.2.6 on 2019-10-16 05:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('common', '0001_initial'),
        ('base', '0001_initial'),
        ('auth', '0011_update_proxy_permissions'),
        ('registry', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='organisationunitscheme',
            name='annotations',
            field=models.ManyToManyField(related_name='_organisationunitscheme_annotations_+', to='common.Annotation', verbose_name='Annotations'),
        ),
        migrations.AddField(
            model_name='organisationunitscheme',
            name='submitted_structure',
            field=models.ManyToManyField(to='registry.SubmittedStructure', verbose_name='Submitted structures'),
        ),
        migrations.AddField(
            model_name='organisationunitcontactx400',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.OrganisationUnitContact', verbose_name='Contact'),
        ),
        migrations.AddField(
            model_name='organisationunitcontacturi',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.OrganisationUnitContact', verbose_name='Contact'),
        ),
        migrations.AddField(
            model_name='organisationunitcontacttelephone',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.OrganisationUnitContact', verbose_name='Contact'),
        ),
        migrations.AddField(
            model_name='organisationunitcontactfax',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.OrganisationUnitContact', verbose_name='Contact'),
        ),
        migrations.AddField(
            model_name='organisationunitcontactemail',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.OrganisationUnitContact', verbose_name='Contact'),
        ),
        migrations.AddField(
            model_name='organisationunitcontact',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.OrganisationUnit', verbose_name='Organisation unit'),
        ),
        migrations.AddField(
            model_name='organisationunit',
            name='annotations',
            field=models.ManyToManyField(related_name='_organisationunit_annotations_+', to='common.Annotation', verbose_name='Annotations'),
        ),
        migrations.AddField(
            model_name='organisationunit',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.OrganisationUnitScheme', verbose_name='Organisation unit scheme'),
        ),
        migrations.AddField(
            model_name='dataproviderscheme',
            name='agency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.Agency', verbose_name='Agency'),
        ),
        migrations.AddField(
            model_name='dataproviderscheme',
            name='annotations',
            field=models.ManyToManyField(related_name='_dataproviderscheme_annotations_+', to='common.Annotation', verbose_name='Annotations'),
        ),
        migrations.AddField(
            model_name='dataproviderscheme',
            name='submitted_structure',
            field=models.ManyToManyField(to='registry.SubmittedStructure', verbose_name='Submitted structures'),
        ),
        migrations.AddField(
            model_name='dataproviderreference',
            name='agency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.Agency', verbose_name='Agency'),
        ),
        migrations.AddField(
            model_name='dataprovidercontactx400',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.DataProviderContact', verbose_name='Contact'),
        ),
        migrations.AddField(
            model_name='dataprovidercontacturi',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.DataProviderContact', verbose_name='Contact'),
        ),
        migrations.AddField(
            model_name='dataprovidercontacttelephone',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.DataProviderContact', verbose_name='Contact'),
        ),
        migrations.AddField(
            model_name='dataprovidercontactfax',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.DataProviderContact', verbose_name='Contact'),
        ),
        migrations.AddField(
            model_name='dataprovidercontactemail',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.DataProviderContact', verbose_name='Contact'),
        ),
        migrations.AddField(
            model_name='dataprovidercontact',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.DataProvider', verbose_name='Data provider'),
        ),
        migrations.AddField(
            model_name='dataprovider',
            name='annotations',
            field=models.ManyToManyField(related_name='_dataprovider_annotations_+', to='common.Annotation', verbose_name='Annotations'),
        ),
        migrations.AddField(
            model_name='dataprovider',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.DataProviderScheme', verbose_name='Data provider scheme'),
        ),
        migrations.AddField(
            model_name='dataprovider',
            name='content_constraint',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='registry.ContentConstraintReference', verbose_name='Content constraint'),
        ),
        migrations.AddField(
            model_name='dataconsumerscheme',
            name='agency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.Agency', verbose_name='Agency'),
        ),
        migrations.AddField(
            model_name='dataconsumerscheme',
            name='annotations',
            field=models.ManyToManyField(related_name='_dataconsumerscheme_annotations_+', to='common.Annotation', verbose_name='Annotations'),
        ),
        migrations.AddField(
            model_name='dataconsumerscheme',
            name='submitted_structure',
            field=models.ManyToManyField(to='registry.SubmittedStructure', verbose_name='Submitted structures'),
        ),
        migrations.AddField(
            model_name='dataconsumercontactx400',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.DataConsumerContact', verbose_name='Contact'),
        ),
        migrations.AddField(
            model_name='dataconsumercontacturi',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.DataConsumerContact', verbose_name='Contact'),
        ),
        migrations.AddField(
            model_name='dataconsumercontacttelephone',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.DataConsumerContact', verbose_name='Contact'),
        ),
        migrations.AddField(
            model_name='dataconsumercontactfax',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.DataConsumerContact', verbose_name='Contact'),
        ),
        migrations.AddField(
            model_name='dataconsumercontactemail',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.DataConsumerContact', verbose_name='Contact'),
        ),
        migrations.AddField(
            model_name='dataconsumercontact',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.DataConsumer', verbose_name='Data consumer'),
        ),
        migrations.AddField(
            model_name='dataconsumer',
            name='annotations',
            field=models.ManyToManyField(related_name='_dataconsumer_annotations_+', to='common.Annotation', verbose_name='Annotations'),
        ),
        migrations.AddField(
            model_name='dataconsumer',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.DataConsumerScheme', verbose_name='Data consumer scheme'),
        ),
        migrations.AddField(
            model_name='agencycontactx400',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.AgencyContact', verbose_name='Contact person'),
        ),
        migrations.AddField(
            model_name='agencycontacturi',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.AgencyContact', verbose_name='Contact person'),
        ),
        migrations.AddField(
            model_name='agencycontacttelephone',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.AgencyContact', verbose_name='Contact person'),
        ),
        migrations.AddField(
            model_name='agencycontactfax',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.AgencyContact', verbose_name='Contact person'),
        ),
        migrations.AddField(
            model_name='agencycontactemail',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.AgencyContact', verbose_name='Contact person'),
        ),
        migrations.AddField(
            model_name='agencycontact',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Agency', verbose_name='Agency'),
        ),
        migrations.AddField(
            model_name='agency',
            name='annotations',
            field=models.ManyToManyField(related_name='_agency_annotations_+', to='common.Annotation', verbose_name='Annotations'),
        ),
        migrations.AddField(
            model_name='user',
            name='agency',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='base.Agency', verbose_name='Agency'),
        ),
        migrations.AddField(
            model_name='user',
            name='data_consumer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='base.DataConsumer', verbose_name='Data consumer'),
        ),
        migrations.AddField(
            model_name='user',
            name='data_provider',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='base.DataProvider', verbose_name='Data provider'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddIndex(
            model_name='organisationunitscheme',
            index=models.Index(fields=['agency', 'object_id', 'major', 'minor', 'patch'], name='base_organi_agency__9791d0_idx'),
        ),
        migrations.AddConstraint(
            model_name='organisationunitscheme',
            constraint=models.UniqueConstraint(fields=('agency', 'object_id', 'major', 'minor', 'patch'), name='unique_maintainable'),
        ),
        migrations.AddIndex(
            model_name='organisationunit',
            index=models.Index(fields=['container', 'object_id'], name='base_organi_contain_6cd310_idx'),
        ),
        migrations.AddConstraint(
            model_name='organisationunit',
            constraint=models.UniqueConstraint(fields=('container', 'object_id'), name='unique_item'),
        ),
        migrations.AddIndex(
            model_name='dataproviderscheme',
            index=models.Index(fields=['agency', 'object_id', 'major', 'minor', 'patch'], name='base_datapr_agency__29f129_idx'),
        ),
        migrations.AddConstraint(
            model_name='dataproviderscheme',
            constraint=models.UniqueConstraint(fields=('agency', 'object_id', 'major', 'minor', 'patch'), name='unique_maintainable'),
        ),
        migrations.AddIndex(
            model_name='dataprovider',
            index=models.Index(fields=['container', 'object_id'], name='base_datapr_contain_465553_idx'),
        ),
        migrations.AddConstraint(
            model_name='dataprovider',
            constraint=models.UniqueConstraint(fields=('container', 'object_id'), name='unique_item'),
        ),
        migrations.AddIndex(
            model_name='dataconsumerscheme',
            index=models.Index(fields=['agency', 'object_id', 'major', 'minor', 'patch'], name='base_dataco_agency__ed33d5_idx'),
        ),
        migrations.AddConstraint(
            model_name='dataconsumerscheme',
            constraint=models.UniqueConstraint(fields=('agency', 'object_id', 'major', 'minor', 'patch'), name='unique_maintainable'),
        ),
        migrations.AddIndex(
            model_name='dataconsumer',
            index=models.Index(fields=['container', 'object_id'], name='base_dataco_contain_7f60fc_idx'),
        ),
        migrations.AddConstraint(
            model_name='dataconsumer',
            constraint=models.UniqueConstraint(fields=('container', 'object_id'), name='unique_item'),
        ),
    ]
