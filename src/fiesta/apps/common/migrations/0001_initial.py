# Generated by Django 2.2.3 on 2019-09-10 04:37

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('codelist', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Format',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_type', models.CharField(blank=True, choices=[(None, 'None'), ('String', 'String'), ('Alpha', 'Alpha'), ('AlphaNumeric', 'AlphaNumeric'), ('Numeric', 'Numeric'), ('BigInteger', 'BigInteger'), ('Integer', 'Integer'), ('Long', 'Long'), ('Short', 'Short'), ('Decimal', 'Decimal'), ('Float', 'Float'), ('Double', 'Double'), ('Boolean', 'Boolean'), ('URI', 'URI'), ('Count', 'Count'), ('InclusiveValueRange', 'InclusiveValueRange'), ('ExclusiveValueRange', 'ExclusiveValueRange'), ('Incremental', 'Incremental'), ('ObservationalTimePeriod', 'ObservationalTimePeriod'), ('StandardTimePeriod', 'StandardTimePeriod'), ('BasicTimePeriod', 'BasicTimePeriod'), ('GregorianTimePeriod', 'GregorianTimePeriod'), ('GregorianYear', 'GregorianYear'), ('GregorianYearMonth', 'GregorianYearMonth'), ('GregorianDay', 'GregorianDay'), ('ReportingTimePeriod', 'ReportingTimePeriod'), ('ReportingYear', 'ReportingYear'), ('ReportingSemester', 'ReportingSemester'), ('ReportingTrimester', 'ReportingTrimester'), ('ReportingQuarter', 'ReportingQuarter'), ('ReportingMonth', 'ReportingMonth'), ('ReportingWeek', 'ReportingWeek'), ('ReportingDay', 'ReportingDay'), ('DateTime', 'DateTime'), ('TimeRange', 'TimeRange'), ('Month', 'Month'), ('MonthDay', 'MonthDay'), ('Day', 'Day'), ('Time', 'Time'), ('Duration', 'Duration'), ('XHTML', 'XHTML'), ('KeyValues', 'KeyValues'), ('IdentifiableReference', 'IdentifiableReference'), ('DataSetReference', 'DataSetReference'), ('AttachmentConstraintReference', 'AttachmentConstraintReference')], max_length=63, null=True)),
                ('is_sequence', models.NullBooleanField()),
                ('interval', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('start_value', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('end_value', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('time_interval', models.DurationField(blank=True, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('min_length', models.PositiveIntegerField(blank=True, null=True)),
                ('max_length', models.PositiveIntegerField(blank=True, null=True)),
                ('min_value', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('max_value', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('decimals', models.PositiveIntegerField(blank=True, null=True)),
                ('pattern', models.TextField(blank=True, null=True)),
                ('is_multi_lingual', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Text',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255)),
                ('text_en', models.CharField(max_length=255, null=True)),
                ('text_el', models.CharField(max_length=255, null=True)),
                ('text_type', models.CharField(blank=True, choices=[('name', 'name'), ('description', 'description'), ('annotation_text', 'annotation_text')], max_length=63, null=True)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Representation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enumeration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='codelist.Codelist')),
                ('enumeration_format', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='common.Format')),
                ('text_format', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='common.Format')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Annotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.CharField(blank=True, max_length=63, verbose_name='ID')),
                ('annotation_title', models.CharField(blank=True, max_length=127, verbose_name='title')),
                ('annotation_type', models.CharField(blank=True, max_length=63, verbose_name='type')),
                ('annotation_url', models.URLField(blank=True, null=True, verbose_name='URL')),
                ('obj_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
