# Generated by Django 2.2.1 on 2019-05-13 11:44

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Codelist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(default='1.0', max_length=15, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*'), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('is_final', models.BooleanField(default=False)),
                ('object_id', models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('[A-Za-z][A-Za-z0-9_\\-]*'), 'Enter a value of type NCNameIDType that has pattern "([A-Za-z][A-Za-z0-9_\\-]*)"', 'invalid_pattern')], verbose_name='id')),
            ],
            options={
                'ordering': ['object_id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Format',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_type', models.CharField(blank=True, choices=[(None, 'None'), ('String', 'String'), ('Alpha', 'Alpha'), ('AlphaNumeric', 'AlphaNumeric'), ('Numeric', 'Numeric'), ('BigInteger', 'BigInteger'), ('Integer', 'Integer'), ('Long', 'Long'), ('Short', 'Short'), ('Decimal', 'Decimal'), ('Float', 'Float'), ('Double', 'Double'), ('Boolean', 'Boolean'), ('URI', 'URI'), ('Count', 'Count'), ('InclusiveValueRange', 'InclusiveValueRange'), ('ExclusiveValueRange', 'ExclusiveValueRange'), ('Incremental', 'Incremental'), ('ObservationalTimePeriod', 'ObservationalTimePeriod'), ('StandardTimePeriod', 'StandardTimePeriod'), ('BasicTimePeriod', 'BasicTimePeriod'), ('GregorianTimePeriod', 'GregorianTimePeriod'), ('GregorianYear', 'GregorianYear'), ('GregorianYearMonth', 'GregorianYearMonth'), ('GregorianDay', 'GregorianDay'), ('ReportingTimePeriod', 'ReportingTimePeriod'), ('ReportingYear', 'ReportingYear'), ('ReportingSemester', 'ReportingSemester'), ('ReportingTrimester', 'ReportingTrimester'), ('ReportingQuarter', 'ReportingQuarter'), ('ReportingMonth', 'ReportingMonth'), ('ReportingWeek', 'ReportingWeek'), ('ReportingDay', 'ReportingDay'), ('DateTime', 'DateTime'), ('TimeRange', 'TimeRange'), ('Month', 'Month'), ('MonthDay', 'MonthDay'), ('Day', 'Day'), ('Time', 'Time'), ('Duration', 'Duration'), ('XHTML', 'XHTML'), ('KeyValues', 'KeyValues'), ('IdentifiableReference', 'IdentifiableReference'), ('DataSetReference', 'DataSetReference'), ('AttachmentConstraintReference', 'AttachmentConstraintReference')], max_length=63, null=True)),
                ('is_sequence', models.NullBooleanField()),
                ('interval', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('start_value', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('end_value', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('time_interval', models.DurationField(blank=True, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('min_length', models.PositiveIntegerField(blank=True, null=True)),
                ('max_length', models.PositiveIntegerField(blank=True, null=True)),
                ('min_value', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('max_value', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('decimals', models.PositiveIntegerField(blank=True, null=True)),
                ('pattern', models.TextField(blank=True, null=True)),
                ('is_multi_lingual', models.BooleanField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ISOConceptReference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('concept_agency', models.CharField(max_length=255)),
                ('concept_scheme_id', models.CharField(max_length=63)),
                ('concept_id', models.CharField(max_length=63)),
            ],
        ),
        migrations.CreateModel(
            name='MessageText',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=63, null=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$'), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=255, unique=True)),
                ('depth', models.PositiveIntegerField()),
                ('numchild', models.PositiveIntegerField(default=0)),
                ('object_id', models.CharField(blank=True, max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$'), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='ID')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='fiesta.Organisation')),
            ],
            options={
                'ordering': ['object_id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StatusMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('S', 'Success'), ('W', 'Warning'), ('F', 'Failure'), ('P', 'Processing'), ('F', 'Finished')], max_length=63)),
                ('message_text', models.ManyToManyField(related_name='statuses', to='fiesta.MessageText')),
            ],
        ),
        migrations.CreateModel(
            name='Structure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('A', 'Append'), ('R', 'Replace'), ('D', 'Delete')], default='A', max_length=63)),
                ('structure_location', models.URLField(null=True)),
                ('external_dependencies', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='WSRestStructureRequestRegistration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('prepared', models.DateTimeField(auto_now=True)),
                ('resource', models.CharField(max_length=63)),
                ('agency_id', models.CharField(max_length=63)),
                ('resource_id', models.CharField(max_length=63)),
                ('version', models.CharField(max_length=63)),
                ('detail', models.CharField(max_length=63)),
                ('references', models.CharField(max_length=63)),
                ('requester', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wsrest_structure_requests', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Text',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lang', models.CharField(choices=[('en', 'English'), ('gr', 'Greek'), ('fr', 'French')], default='en', max_length=63)),
                ('text', models.CharField(max_length=255)),
                ('text_type', models.CharField(blank=True, choices=[('name', 'name'), ('description', 'description'), ('annotation_text', 'annotation_text')], max_length=63, null=True)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='SubmittedStructure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(blank=True, choices=[('A', 'Append'), ('R', 'Replace'), ('D', 'Delete')], max_length=63, null=True)),
                ('external_dependencies', models.BooleanField(blank=True, null=True)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('status_message', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='fiesta.StatusMessage')),
                ('structure_submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submitted_structures', to='fiesta.Structure')),
            ],
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$'), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='ID')),
                ('test', models.BooleanField(default=False)),
                ('prepared', models.DateTimeField(blank=True, null=True)),
                ('time_received', models.DateTimeField()),
                ('time_updated', models.DateTimeField(null=True)),
                ('status', models.CharField(choices=[('S', 'Success'), ('W', 'Warning'), ('F', 'Failure'), ('P', 'Processing'), ('F', 'Finished')], default='P', max_length=63)),
                ('receiver', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='receiver_submissions', to='fiesta.Organisation')),
                ('receiver_contacts', models.ManyToManyField(related_name='receiver_contact_submissions', to='fiesta.Contact')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender_submissions', to='fiesta.Organisation')),
                ('sender_contacts', models.ManyToManyField(related_name='sender_contact_submissions', to='fiesta.Contact')),
            ],
        ),
        migrations.AddField(
            model_name='structure',
            name='submission',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='structure_submission', to='fiesta.Submission'),
        ),
        migrations.CreateModel(
            name='Representation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enumeration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='enumerations', to='fiesta.Codelist')),
                ('enumeration_format', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='representation_enumeration_formats', to='fiesta.Format')),
                ('text_format', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='representation_text_formats', to='fiesta.Format')),
            ],
        ),
        migrations.CreateModel(
            name='OrganisationScheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(default='1.0', max_length=15, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*'), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('object_id', models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$'), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='ID')),
                ('is_final', models.BooleanField(default=False)),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fiesta.Organisation')),
            ],
            options={
                'ordering': ['object_id'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='organisation',
            name='schemes',
            field=models.ManyToManyField(blank=True, related_name='organisations', to='fiesta.OrganisationScheme'),
        ),
        migrations.AddField(
            model_name='contact',
            name='organisation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organisation_contacts', to='fiesta.Organisation'),
        ),
        migrations.AddField(
            model_name='contact',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ConceptScheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(default='1.0', max_length=15, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*'), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('is_final', models.BooleanField(default=False)),
                ('object_id', models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('[A-Za-z][A-Za-z0-9_\\-]*'), 'Enter a value of type NCNameIDType that has pattern "([A-Za-z][A-Za-z0-9_\\-]*)"', 'invalid_pattern')], verbose_name='id')),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fiesta.Organisation')),
            ],
            options={
                'ordering': ['object_id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Concept',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=255, unique=True)),
                ('depth', models.PositiveIntegerField()),
                ('numchild', models.PositiveIntegerField(default=0)),
                ('object_id', models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$'), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('core_representation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fiesta.Representation')),
                ('iso_concept_reference', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='concepts', to='fiesta.ISOConceptReference')),
                ('wrapper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='concepts', to='fiesta.ConceptScheme')),
            ],
            options={
                'ordering': ['object_id'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='codelist',
            name='agency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fiesta.Organisation'),
        ),
        migrations.CreateModel(
            name='Code',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=255, unique=True)),
                ('depth', models.PositiveIntegerField()),
                ('numchild', models.PositiveIntegerField(default=0)),
                ('object_id', models.CharField(blank=True, max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$'), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='ID')),
                ('wrapper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fiesta.Codelist', verbose_name='Codelist')),
            ],
            options={
                'ordering': ['object_id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Annotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.CharField(blank=True, max_length=63, verbose_name='ID')),
                ('annotation_title', models.CharField(blank=True, max_length=127, verbose_name='title')),
                ('annotation_type', models.CharField(blank=True, max_length=63, verbose_name='type')),
                ('annotation_url', models.URLField(blank=True, null=True, verbose_name='URL')),
                ('obj_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.AddIndex(
            model_name='organisationscheme',
            index=models.Index(fields=['object_id'], name='fiesta_orga_object__2d56c2_idx'),
        ),
        migrations.AddIndex(
            model_name='organisationscheme',
            index=models.Index(fields=['agency'], name='fiesta_orga_agency__211c38_idx'),
        ),
        migrations.AddIndex(
            model_name='organisationscheme',
            index=models.Index(fields=['object_id', 'version'], name='fiesta_orga_object__731965_idx'),
        ),
        migrations.AddIndex(
            model_name='organisationscheme',
            index=models.Index(fields=['object_id', 'agency', 'version'], name='fiesta_orga_object__6d8e75_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='organisationscheme',
            unique_together={('object_id', 'agency', 'version')},
        ),
        migrations.AddIndex(
            model_name='organisation',
            index=models.Index(fields=['object_id'], name='fiesta_orga_object__dacd46_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='organisation',
            unique_together={('object_id',)},
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['user'], name='fiesta_cont_user_id_143ecd_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['organisation'], name='fiesta_cont_organis_918e24_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['user', 'organisation'], name='fiesta_cont_user_id_1e98e4_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='contact',
            unique_together={('user', 'organisation')},
        ),
        migrations.AddIndex(
            model_name='conceptscheme',
            index=models.Index(fields=['object_id'], name='fiesta_conc_object__428a93_idx'),
        ),
        migrations.AddIndex(
            model_name='conceptscheme',
            index=models.Index(fields=['agency'], name='fiesta_conc_agency__62987f_idx'),
        ),
        migrations.AddIndex(
            model_name='conceptscheme',
            index=models.Index(fields=['object_id', 'version'], name='fiesta_conc_object__8e3075_idx'),
        ),
        migrations.AddIndex(
            model_name='conceptscheme',
            index=models.Index(fields=['object_id', 'agency', 'version'], name='fiesta_conc_object__2d3742_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='conceptscheme',
            unique_together={('object_id', 'agency', 'version')},
        ),
        migrations.AddIndex(
            model_name='concept',
            index=models.Index(fields=['object_id'], name='fiesta_conc_object__1ca1a7_idx'),
        ),
        migrations.AddIndex(
            model_name='concept',
            index=models.Index(fields=['wrapper'], name='fiesta_conc_wrapper_6473e4_idx'),
        ),
        migrations.AddIndex(
            model_name='concept',
            index=models.Index(fields=['wrapper', 'object_id'], name='fiesta_conc_wrapper_d8d40e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='concept',
            unique_together={('wrapper', 'object_id')},
        ),
        migrations.AddIndex(
            model_name='codelist',
            index=models.Index(fields=['object_id'], name='fiesta_code_object__eedb7c_idx'),
        ),
        migrations.AddIndex(
            model_name='codelist',
            index=models.Index(fields=['agency'], name='fiesta_code_agency__0e95c1_idx'),
        ),
        migrations.AddIndex(
            model_name='codelist',
            index=models.Index(fields=['object_id', 'version'], name='fiesta_code_object__6e5a4a_idx'),
        ),
        migrations.AddIndex(
            model_name='codelist',
            index=models.Index(fields=['object_id', 'agency', 'version'], name='fiesta_code_object__9ee8e3_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='codelist',
            unique_together={('object_id', 'agency', 'version')},
        ),
        migrations.AddIndex(
            model_name='code',
            index=models.Index(fields=['object_id'], name='fiesta_code_object__dea206_idx'),
        ),
        migrations.AddIndex(
            model_name='code',
            index=models.Index(fields=['wrapper'], name='fiesta_code_wrapper_228ba3_idx'),
        ),
        migrations.AddIndex(
            model_name='code',
            index=models.Index(fields=['wrapper', 'object_id'], name='fiesta_code_wrapper_92854c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='code',
            unique_together={('wrapper', 'object_id')},
        ),
    ]
